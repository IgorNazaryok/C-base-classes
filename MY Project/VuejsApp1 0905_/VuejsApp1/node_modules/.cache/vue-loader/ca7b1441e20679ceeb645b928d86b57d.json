{"remainingRequest":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\components\\Voting.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\components\\Voting.vue","mtime":1589034359900},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    \n    data() {\n        return {\n            newAnswer: \"\",\n            activeQuestion: \"\",\n            activeQuestionId: \"\",\n            activeAnswers: \"\",\n            UserVoice: \"\",\n            NumberUserVoice: \"\",\n            visible: 0              \n        }\n    },      \n    \n    methods: {\n        \n        GetActiveQuestionsAnswer(value) {              \n            this.activeQuestionId = Number(value);\n            fetch(\"https://localhost:44319/questions/\" + value).then(response => response.json())\n                .then(commits => this.activeQuestion = commits);\n            fetch(\"https://localhost:44319/answers/\" + value).then(response => response.json())\n                .then(commits => this.activeAnswers = commits);\n            //this.visible = this.$parent.$data.UserSession;\n        },\n        \n        AddAnswer(value) {\n            fetch(\"https://localhost:44319/answers/\",\n                {\n                    method: 'POST',\n                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ answerText: value, QuestionId: this.activeQuestionId })\n                });\n                fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\n                .then(commits => this.activeAnswers = commits); \n            this.newAnswer = '';\n        },\n\n        Voting(event) {\n\n            \n            fetch('https://localhost:44319/users/' + this.$parent.$data.UserSession)\n                .then(response => response.json())\n                .then(commits =>\n                {                        \n                    fetch(\"https://localhost:44319/votes\",\n                        {\n                            method: 'POST',\n                            headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n                            body: JSON.stringify({ answerId: Number(event.target.value), userName: commits.userName })\n                        })\n                });\n            \n            fetch('https://localhost:44319/Votes/10/' + event.target.value).then(response => response.text()).then(number =>// numberUsers\n            {\n                fetch('https://localhost:44319/votes/' + event.target.value).then(response => response.text()).then(users =>// Users\n                {                        \n                    fetch(\"https://localhost:44319/answers\",\n                        {\n                            method: 'PUT',\n                            headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n                            body: JSON.stringify({\n                                UserVoice: users,\n                                NumberVoice: Number(number),\n                                id: Number(event.target.value)\n                            })\n                        })\n\n                })\n            });\n            \n            fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\n                .then(commits => this.activeAnswers = commits);\n            \n        },\n\n       \n    }\n} \n",{"version":3,"sources":["Voting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA","file":"Voting.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <section>\r\n        <div>\r\n\r\n            <button @click=\"GetActiveQuestionsAnswer($route.params.id)\">–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç—ã </button>\r\n\r\n            <h4 id=\"question\">{{ activeQuestion.questionText }}</h4>\r\n            <ul class=\"radio-list\">\r\n                <li v-for=\"(activeAnswer, id) in activeAnswers\" :key=\"id\">\r\n                    <div id=\"answer\">\r\n                        {{ activeAnswer.answerText }}\r\n                        <template v-if=\"this.$parent.$data.UserSession\">\r\n                            <button :value=\"activeAnswer.id\" @click=\"Voting\">–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å</button>\r\n                            <abbr :title=\"activeAnswer.userVoice\"> üëç </abbr>\r\n                            {{ activeAnswer.numberVoice }}\r\n                        </template>\r\n\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n\r\n            <p v-show=\"visible\">\r\n\r\n                <label>–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:</label><br />\r\n                <input class=\"text\" type=\"text\" v-model=\"newAnswer\" />\r\n                <button @click=\"AddAnswer(newAnswer)\">–î–æ–±–∞–≤–∏—Ç—å</button>\r\n            </p>\r\n            {{visible}}\r\n            {{this.$parent.$data.UserSession}}\r\n\r\n        </div>        \r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        \r\n        data() {\r\n            return {\r\n                newAnswer: \"\",\r\n                activeQuestion: \"\",\r\n                activeQuestionId: \"\",\r\n                activeAnswers: \"\",\r\n                UserVoice: \"\",\r\n                NumberUserVoice: \"\",\r\n                visible: 0              \r\n            }\r\n        },      \r\n        \r\n        methods: {\r\n            \r\n            GetActiveQuestionsAnswer(value) {              \r\n                this.activeQuestionId = Number(value);\r\n                fetch(\"https://localhost:44319/questions/\" + value).then(response => response.json())\r\n                    .then(commits => this.activeQuestion = commits);\r\n                fetch(\"https://localhost:44319/answers/\" + value).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits);\r\n                //this.visible = this.$parent.$data.UserSession;\r\n            },\r\n            \r\n            AddAnswer(value) {\r\n                fetch(\"https://localhost:44319/answers/\",\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ answerText: value, QuestionId: this.activeQuestionId })\r\n                    });\r\n                    fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits); \r\n                this.newAnswer = '';\r\n            },\r\n\r\n            Voting(event) {\r\n\r\n                \r\n                fetch('https://localhost:44319/users/' + this.$parent.$data.UserSession)\r\n                    .then(response => response.json())\r\n                    .then(commits =>\r\n                    {                        \r\n                        fetch(\"https://localhost:44319/votes\",\r\n                            {\r\n                                method: 'POST',\r\n                                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                                body: JSON.stringify({ answerId: Number(event.target.value), userName: commits.userName })\r\n                            })\r\n                    });\r\n                \r\n                fetch('https://localhost:44319/Votes/10/' + event.target.value).then(response => response.text()).then(number =>// numberUsers\r\n                {\r\n                    fetch('https://localhost:44319/votes/' + event.target.value).then(response => response.text()).then(users =>// Users\r\n                    {                        \r\n                        fetch(\"https://localhost:44319/answers\",\r\n                            {\r\n                                method: 'PUT',\r\n                                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                                body: JSON.stringify({\r\n                                    UserVoice: users,\r\n                                    NumberVoice: Number(number),\r\n                                    id: Number(event.target.value)\r\n                                })\r\n                            })\r\n\r\n                    })\r\n                });\r\n                \r\n                fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits);\r\n                \r\n            },\r\n\r\n           \r\n        }\r\n    } \r\n</script>\r\n<style>\r\n    #answer {\r\n        width: 300px;\r\n        border: none;\r\n        border-radius: 10px;\r\n        margin: 10px;\r\n        padding: 10px;\r\n        background-color: silver;\r\n    }\r\n\r\n    #question {\r\n        width: 40%;\r\n        height: 30px;        \r\n        border: none;        \r\n        border-radius: 10px;\r\n        margin: 20px;\r\n        padding: 20px;\r\n    }\r\n\r\n    .radio-list {\r\n        list-style: none;\r\n    }\r\n   \r\n</style>\r\n\r\n"]}]}