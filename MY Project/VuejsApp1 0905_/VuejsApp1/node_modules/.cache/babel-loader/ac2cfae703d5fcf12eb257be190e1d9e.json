{"remainingRequest":"C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\src\\components\\Voting.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\src\\components\\Voting.vue","mtime":1589040849698},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1 0905_\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      newAnswer: \"\",\n      activeQuestion: \"\",\n      activeQuestionId: \"\",\n      activeAnswers: \"\",\n      UserVoice: \"\",\n      NumberUserVoice: \"\",\n      visible: this.$parent.$data.UserSession\n    };\n  },\n  methods: {\n    GetActiveQuestionsAnswer: function GetActiveQuestionsAnswer(value) {\n      var _this = this;\n\n      this.activeQuestionId = Number(value);\n      fetch(\"https://localhost:44319/questions/\" + value).then(function (response) {\n        return response.json();\n      }).then(function (commits) {\n        return _this.activeQuestion = commits;\n      });\n      fetch(\"https://localhost:44319/answers/\" + value).then(function (response) {\n        return response.json();\n      }).then(function (commits) {\n        return _this.activeAnswers = commits;\n      });\n      this.visible = this.$parent.$data.UserSession;\n    },\n    AddAnswer: function AddAnswer(value) {\n      var _this2 = this;\n\n      if (value != \"\") {\n        fetch(\"https://localhost:44319/answers/\", {\n          method: 'POST',\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            answerText: value,\n            QuestionId: this.activeQuestionId\n          })\n        });\n        fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(function (response) {\n          return response.json();\n        }).then(function (commits) {\n          return _this2.activeAnswers = commits;\n        });\n        this.newAnswer = '';\n      }\n    },\n    Voting: function Voting(event) {\n      var _this3 = this;\n\n      fetch('https://localhost:44319/users/' + this.$parent.$data.UserSession).then(function (response) {\n        return response.json();\n      }).then(function (commits) {\n        fetch(\"https://localhost:44319/votes\", {\n          method: 'POST',\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            answerId: Number(event.target.value),\n            userName: commits.userName\n          })\n        });\n      });\n      fetch('https://localhost:44319/Votes/10/' + event.target.value).then(function (response) {\n        return response.text();\n      }).then(function (number) // numberUsers\n      {\n        fetch('https://localhost:44319/votes/' + event.target.value).then(function (response) {\n          return response.text();\n        }).then(function (users) // Users\n        {\n          fetch(\"https://localhost:44319/answers\", {\n            method: 'PUT',\n            headers: {\n              \"Accept\": \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              UserVoice: users,\n              NumberVoice: Number(number),\n              id: Number(event.target.value)\n            })\n          });\n        });\n      });\n      fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(function (response) {\n        return response.json();\n      }).then(function (commits) {\n        return _this3.activeAnswers = commits;\n      });\n    }\n  }\n};",{"version":3,"sources":["Voting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,eAAA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,iBAAA,EADA;AAEA,sBAAA,EAFA;AAGA,wBAAA,EAHA;AAIA,qBAAA,EAJA;AAKA,iBAAA,EALA;AAMA,uBAAA,EANA;AAOA,eAAA,KAAA,OAAA,CAAA,KAAA,CAAA;AAPA,KAAA;AASA,GAZA;AAcA,WAAA;AAEA,4BAFA,oCAEA,KAFA,EAEA;AAAA;;AACA,WAAA,gBAAA,GAAA,OAAA,KAAA,CAAA;AACA,YAAA,uCAAA,KAAA,EAAA,IAAA,CAAA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OAAA,EACA,IADA,CACA;AAAA,eAAA,MAAA,cAAA,GAAA,OAAA;AAAA,OADA;AAEA,YAAA,qCAAA,KAAA,EAAA,IAAA,CAAA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OAAA,EACA,IADA,CACA;AAAA,eAAA,MAAA,aAAA,GAAA,OAAA;AAAA,OADA;AAEA,WAAA,OAAA,GAAA,KAAA,OAAA,CAAA,KAAA,CAAA,WAAA;AACA,KATA;AAWA,aAXA,qBAWA,KAXA,EAWA;AAAA;;AACA,UAAA,SAAA,EAAA,EAAA;AACA,cAAA,kCAAA,EACA;AACA,kBAAA,MADA;AAEA,mBAAA;AAAA,sBAAA,kBAAA;AAAA,4BAAA;AAAA,WAFA;AAGA,gBAAA,KAAA,SAAA,CAAA;AAAA,wBAAA,KAAA;AAAA,wBAAA,KAAA;AAAA,WAAA;AAHA,SADA;AAMA,cAAA,qCAAA,KAAA,gBAAA,EAAA,IAAA,CAAA;AAAA,iBAAA,SAAA,IAAA,EAAA;AAAA,SAAA,EACA,IADA,CACA;AAAA,iBAAA,OAAA,aAAA,GAAA,OAAA;AAAA,SADA;AAEA,aAAA,SAAA,GAAA,EAAA;AACA;AACA,KAvBA;AAyBA,UAzBA,kBAyBA,KAzBA,EAyBA;AAAA;;AAGA,YAAA,mCAAA,KAAA,OAAA,CAAA,KAAA,CAAA,WAAA,EACA,IADA,CACA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OADA,EAEA,IAFA,CAEA,mBACA;AACA,cAAA,+BAAA,EACA;AACA,kBAAA,MADA;AAEA,mBAAA;AAAA,sBAAA,kBAAA;AAAA,4BAAA;AAAA,WAFA;AAGA,gBAAA,KAAA,SAAA,CAAA;AAAA,sBAAA,OAAA,MAAA,MAAA,CAAA,KAAA,CAAA;AAAA,sBAAA,QAAA;AAAA,WAAA;AAHA,SADA;AAMA,OAVA;AAYA,YAAA,sCAAA,MAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OAAA,EAAA,IAAA,CAAA,kBAAA;AACA;AACA,cAAA,mCAAA,MAAA,MAAA,CAAA,KAAA,EAAA,IAAA,CAAA;AAAA,iBAAA,SAAA,IAAA,EAAA;AAAA,SAAA,EAAA,IAAA,CAAA,iBAAA;AACA;AACA,gBAAA,iCAAA,EACA;AACA,oBAAA,KADA;AAEA,qBAAA;AAAA,wBAAA,kBAAA;AAAA,8BAAA;AAAA,aAFA;AAGA,kBAAA,KAAA,SAAA,CAAA;AACA,yBAAA,KADA;AAEA,2BAAA,OAAA,MAAA,CAFA;AAGA,kBAAA,OAAA,MAAA,MAAA,CAAA,KAAA;AAHA,aAAA;AAHA,WADA;AAWA,SAbA;AAcA,OAhBA;AAkBA,YAAA,qCAAA,KAAA,gBAAA,EAAA,IAAA,CAAA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OAAA,EACA,IADA,CACA;AAAA,eAAA,OAAA,aAAA,GAAA,OAAA;AAAA,OADA;AAGA;AA7DA;AAdA,CAAA","sourcesContent":["<template>\r\n    <section>\r\n        <div>\r\n\r\n            <button @click=\"GetActiveQuestionsAnswer($route.params.id)\">–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–æ–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç—ã </button>\r\n\r\n            <h4 id=\"question\">{{ activeQuestion.questionText }}</h4>\r\n            <ul class=\"radio-list\">\r\n                <li v-for=\"(activeAnswer, id) in activeAnswers\" :key=\"id\">\r\n                    <div id=\"answer\">\r\n                        {{ activeAnswer.answerText }}\r\n                        <div v-show=\"visible\">\r\n                            <button :value=\"activeAnswer.id\" @click=\"Voting\">–ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å</button>\r\n                            <abbr :title=\"activeAnswer.userVoice\"> üëç </abbr>\r\n                            {{ activeAnswer.numberVoice }}\r\n                        </div>\r\n\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n\r\n            <p v-show=\"visible\">\r\n\r\n                <label>–î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:</label><br />\r\n                <input class=\"text\" type=\"text\" v-model=\"newAnswer\" />\r\n                <button @click=\"AddAnswer(newAnswer)\">–î–æ–±–∞–≤–∏—Ç—å</button>\r\n            </p>\r\n            \r\n\r\n        </div>        \r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        \r\n        data() {\r\n            return {\r\n                newAnswer: \"\",\r\n                activeQuestion: \"\",\r\n                activeQuestionId: \"\",\r\n                activeAnswers: \"\",\r\n                UserVoice: \"\",\r\n                NumberUserVoice: \"\",\r\n                visible: this.$parent.$data.UserSession,              \r\n            }\r\n        },      \r\n        \r\n        methods: {\r\n            \r\n            GetActiveQuestionsAnswer(value) {              \r\n                this.activeQuestionId = Number(value);\r\n                fetch(\"https://localhost:44319/questions/\" + value).then(response => response.json())\r\n                    .then(commits => this.activeQuestion = commits);\r\n                fetch(\"https://localhost:44319/answers/\" + value).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits);\r\n                this.visible = this.$parent.$data.UserSession;\r\n            },\r\n            \r\n            AddAnswer(value) {\r\n                if (value != \"\") {\r\n                    fetch(\"https://localhost:44319/answers/\",\r\n                        {\r\n                            method: 'POST',\r\n                            headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                            body: JSON.stringify({ answerText: value, QuestionId: this.activeQuestionId })\r\n                        });\r\n                    fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\r\n                        .then(commits => this.activeAnswers = commits);\r\n                    this.newAnswer = '';\r\n                }\r\n            },\r\n\r\n            Voting(event) {\r\n\r\n                \r\n                fetch('https://localhost:44319/users/' + this.$parent.$data.UserSession)\r\n                    .then(response => response.json())\r\n                    .then(commits =>\r\n                    {                        \r\n                        fetch(\"https://localhost:44319/votes\",\r\n                            {\r\n                                method: 'POST',\r\n                                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                                body: JSON.stringify({ answerId: Number(event.target.value), userName: commits.userName })\r\n                            })\r\n                    });\r\n                \r\n                fetch('https://localhost:44319/Votes/10/' + event.target.value).then(response => response.text()).then(number =>// numberUsers\r\n                {\r\n                    fetch('https://localhost:44319/votes/' + event.target.value).then(response => response.text()).then(users =>// Users\r\n                    {                        \r\n                        fetch(\"https://localhost:44319/answers\",\r\n                            {\r\n                                method: 'PUT',\r\n                                headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                                body: JSON.stringify({\r\n                                    UserVoice: users,\r\n                                    NumberVoice: Number(number),\r\n                                    id: Number(event.target.value)\r\n                                })\r\n                            })\r\n\r\n                    })\r\n                });\r\n                \r\n                fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits);\r\n                \r\n            },\r\n\r\n           \r\n        }\r\n    } \r\n</script>\r\n<style>\r\n    #answer {\r\n        width: 300px;\r\n        border: none;\r\n        border-radius: 10px;\r\n        margin: 10px;\r\n        padding: 10px;\r\n        background-color: silver;\r\n    }\r\n\r\n    #question {\r\n        width: 40%;\r\n        height: 30px;        \r\n        border: none;        \r\n        border-radius: 10px;\r\n        margin: 20px;\r\n        padding: 20px;\r\n    }\r\n\r\n    .radio-list {\r\n        list-style: none;\r\n    }\r\n   \r\n</style>\r\n\r\n"],"sourceRoot":"src/components"}]}