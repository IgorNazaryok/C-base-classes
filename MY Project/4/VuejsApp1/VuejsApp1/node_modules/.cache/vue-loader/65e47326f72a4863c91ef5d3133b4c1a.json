{"remainingRequest":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\components\\QuestionList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\components\\QuestionList.vue","mtime":1588454057044},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Voting from './Voting.vue';\n\nexport default {\n    props:\n        ['questions',\n        ],\n    data() {\n        return {\n        activeQuestion:\"\",\n        activeQuestionId:1,\n        activeAnswers:\"\",\n        initialVisible: false,\n        urlA: 'https://localhost:44319/answers',\n        }\n},\n    components: {\n        Voting,\n       \n    },\n    methods: {\n\n        Get(url) {\n            fetch(url).then(response => response.json()).then(commits => this.questions = commits);\n        },\n        GetActiveQuestionsAnswer(event) {\n            this.initialVisible = true;\n            alert(this.initialVisible);\n            this.activeQuestionId = Number(event.target.value);                 \n            fetch(\"https://localhost:44319/questions/\" + this.activeQuestionId).then(response => response.json())\n                .then(commits => this.activeQuestion = commits);\n            fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\n                .then(commits => this.activeAnswers = commits);\n        },\n        addAnswer(value) {\n            fetch(this.urlA,\n                {\n                    method: 'POST',\n                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ answerText: \"value\", QuestionId: this.activeQuestionId })\n                })\n        },\n        \n       \n    }\n}\n\n",{"version":3,"sources":["QuestionList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"QuestionList.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <section>\r\n        <div>\r\n\r\n            <button @click=\"Get('https://localhost:44319/questions')\">Загрузить список вопросов </button>\r\n\r\n\r\n            <ul class=\"radio-list\">\r\n                <li v-for=\"(question, id) in questions\" :key=\"id\">\r\n                    <p id=\"block1\">\r\n                        {{ question.questionText }}\r\n                        <button :value=\"question.id\" @click=\"GetActiveQuestionsAnswer\">Открыть</button>\r\n                        \r\n                    </p>\r\n                </li>\r\n            </ul>\r\n            \r\n            <Voting :active-question=\"activeQuestion\" :initial-visible=\"initialVisible\" :active-answers=\"activeAnswers\" @Send-Answer=\"addAnswer\"/>\r\n        </div>\r\n       \r\n        \r\n\r\n    </section>\r\n</template>\r\n<script>    \r\n    import Voting from './Voting.vue';\r\n \r\n    export default {\r\n        props:\r\n            ['questions',\r\n            ],\r\n        data() {\r\n            return {\r\n            activeQuestion:\"\",\r\n            activeQuestionId:1,\r\n            activeAnswers:\"\",\r\n            initialVisible: false,\r\n            urlA: 'https://localhost:44319/answers',\r\n            }\r\n    },\r\n        components: {\r\n            Voting,\r\n           \r\n        },\r\n        methods: {\r\n\r\n            Get(url) {\r\n                fetch(url).then(response => response.json()).then(commits => this.questions = commits);\r\n            },\r\n            GetActiveQuestionsAnswer(event) {\r\n                this.initialVisible = true;\r\n                alert(this.initialVisible);\r\n                this.activeQuestionId = Number(event.target.value);                 \r\n                fetch(\"https://localhost:44319/questions/\" + this.activeQuestionId).then(response => response.json())\r\n                    .then(commits => this.activeQuestion = commits);\r\n                fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits);\r\n            },\r\n            addAnswer(value) {\r\n                fetch(this.urlA,\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ answerText: \"value\", QuestionId: this.activeQuestionId })\r\n                    })\r\n            },\r\n            \r\n           \r\n        }\r\n    }\r\n\r\n</script>\r\n<style>\r\n    #block1 {\r\n        \r\n        width: 30%;\r\n        \r\n        border: 1px solid gray;\r\n        border-radius: 10px;\r\n        margin: 10px;\r\n        padding: 10px;\r\n        background-color: silver;\r\n    }\r\n    #block2 {\r\n       \r\n        \r\n        border: none;\r\n        margin: 10px;\r\n        padding: 10px;\r\n    }\r\n    .radio-list {\r\n        list-style: none;\r\n    }\r\n</style>"]}]}