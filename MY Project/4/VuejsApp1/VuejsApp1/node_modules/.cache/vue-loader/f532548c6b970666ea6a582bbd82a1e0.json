{"remainingRequest":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\App.vue","mtime":1588410138657},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.link {\n    /*display: inline-block;*/\n    display: block;\n}\n\n.container {\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 15px 30px;\n    background: #f9f7f5;\n}\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n    <div id=\"app\" class=\"container\">\r\n        <!--<ul class=\"link\">\r\n        <li><router-link to=\"/\" exact>������ ��������</router-link></li>\r\n        <li><router-link to=\"/addQuestion\">�������� ���� ������</router-link></li>\r\n        <li><router-link to=\"/logining\">������</router-link></li>\r\n    </ul>\r\n    <router-view></router-view>-->\r\n        <!--<QuestionList />-->\r\n        <!--<AddQuestion @Send-Question=\"CreateQuestion\" @Send-Answer=\"CreateAnswer\" />\r\n    <p>Id: {{QuestionId}}</p>-->\r\n        <!--<Authorization @on-session=\"UserSession=$event\" />-->\r\n        <ul>\r\n            <li>\r\n                <v-link href=\"/\">Home</v-link>\r\n            </li>\r\n            <li>\r\n                <v-link href=\"/addQuestion\">�������� ���� ������</v-link>\r\n            </li>\r\n        </ul>\r\n\r\n        <slot></slot>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import QuestionList from './components/QuestionList.vue';\r\n    import AddQuestion from './components/AddQuestion.vue';\r\n    import Authorization from './components/Authorization.vue';\r\n\r\n    const routes =\r\n    {\r\n        '/ ': QuestionList,\r\n        '/addQuestion': AddQuestion,\r\n        '/logining': Authorization,\r\n    }\r\n    const NotFound = { template: '<p>�������� �� �������</p>' }\r\n    \r\n    \r\n    \r\n\r\n    export default {\r\n        name: 'app',\r\n        data() {\r\n            return {\r\n               questions: \"\",\r\n                QuestionId: \"\",\r\n                urlQ: 'https://localhost:44319/questions',\r\n                urlA: 'https://localhost:44319/answers',\r\n                UserSession:\"\",\r\n                currentRoute: window.location.pathname,\r\n            }\r\n        },\r\n        computed: {\r\n            ViewComponent() {\r\n                return routes[this.currentRoute] || NotFound\r\n            }\r\n        },\r\n        render(h) { return h(this.ViewComponent) },\r\n        components: {\r\n            QuestionList,\r\n            AddQuestion,\r\n            Authorization,\r\n           \r\n        },\r\n        methods: {\r\n            \r\n            CreateQuestion(value) {\r\n                fetch(this.urlQ,\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ questionText: value })\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(data => this.QuestionId = data.id);\r\n                 \r\n                fetch(this.urlQ).then(response => response.json()).then(commits => this.questions = commits);\r\n                \r\n            },\r\n            CreateAnswer(value) {\r\n                fetch(this.urlA,\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ answerText: value, QuestionId: this.QuestionId })\r\n                    })                    \r\n            },  \r\n            \r\n        }\r\n    };\r\n</script>\r\n\r\n<style>\r\n    .link {\r\n        /*display: inline-block;*/\r\n        display: block;\r\n    }\r\n    \r\n    .container {\r\n        max-width: 600px;\r\n        margin: 0 auto;\r\n        padding: 15px 30px;\r\n        background: #f9f7f5;\r\n    }\r\n</style>\r\n\r\n"]}]}