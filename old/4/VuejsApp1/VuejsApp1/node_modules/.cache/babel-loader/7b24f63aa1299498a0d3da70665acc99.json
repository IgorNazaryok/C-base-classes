{"remainingRequest":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\components\\Voting.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\src\\components\\Voting.vue","mtime":1588533946229},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Garik\\source\\repos\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      newAnswer: \"\",\n      activeQuestion: \"\",\n      activeQuestionId: \"\",\n      activeAnswers: \"\",\n      initialVisible: false\n    };\n  },\n  methods: {\n    GetActiveQuestionsAnswer: function GetActiveQuestionsAnswer(value) {\n      var _this = this;\n\n      this.initialVisible = true;\n      this.activeQuestionId = Number(value);\n      fetch(\"https://localhost:44319/questions/\" + value).then(function (response) {\n        return response.json();\n      }).then(function (commits) {\n        return _this.activeQuestion = commits;\n      });\n      fetch(\"https://localhost:44319/answers/\" + value).then(function (response) {\n        return response.json();\n      }).then(function (commits) {\n        return _this.activeAnswers = commits;\n      });\n    },\n    addAnswer: function addAnswer(value) {\n      var _this2 = this;\n\n      fetch(\"https://localhost:44319/answers/\", {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          answerText: value,\n          QuestionId: this.activeQuestionId\n        })\n      });\n      fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(function (response) {\n        return response.json();\n      }).then(function (commits) {\n        return _this2.activeAnswers = commits;\n      });\n    }\n  }\n};",{"version":3,"sources":["Voting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,iBAAA,EADA;AAEA,sBAAA,EAFA;AAGA,wBAAA,EAHA;AAIA,qBAAA,EAJA;AAKA,sBAAA;AALA,KAAA;AAOA,GAVA;AAaA,WAAA;AAEA,4BAFA,oCAEA,KAFA,EAEA;AAAA;;AACA,WAAA,cAAA,GAAA,IAAA;AACA,WAAA,gBAAA,GAAA,OAAA,KAAA,CAAA;AACA,YAAA,uCAAA,KAAA,EAAA,IAAA,CAAA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OAAA,EACA,IADA,CACA;AAAA,eAAA,MAAA,cAAA,GAAA,OAAA;AAAA,OADA;AAEA,YAAA,qCAAA,KAAA,EAAA,IAAA,CAAA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OAAA,EACA,IADA,CACA;AAAA,eAAA,MAAA,aAAA,GAAA,OAAA;AAAA,OADA;AAEA,KATA;AAUA,aAVA,qBAUA,KAVA,EAUA;AAAA;;AACA,YAAA,kCAAA,EACA;AACA,gBAAA,MADA;AAEA,iBAAA;AAAA,oBAAA,kBAAA;AAAA,0BAAA;AAAA,SAFA;AAGA,cAAA,KAAA,SAAA,CAAA;AAAA,sBAAA,KAAA;AAAA,sBAAA,KAAA;AAAA,SAAA;AAHA,OADA;AAMA,YAAA,qCAAA,KAAA,gBAAA,EAAA,IAAA,CAAA;AAAA,eAAA,SAAA,IAAA,EAAA;AAAA,OAAA,EACA,IADA,CACA;AAAA,eAAA,OAAA,aAAA,GAAA,OAAA;AAAA,OADA;AAGA;AApBA;AAbA,CAAA","sourcesContent":["<template>\r\n    <section>\r\n        <div>\r\n            <button @click=\"GetActiveQuestionsAnswer($route.params.id)\">Загрузить список вопросов </button>\r\n            <h4 id=\"question\">{{ activeQuestion.questionText }}</h4>\r\n            <ul class=\"radio-list\">\r\n                <li v-for=\"(activeAnswer, id) in activeAnswers\" :key=\"id\">\r\n                    <p id=\"answer\">\r\n                        {{ activeAnswer.answerText }}\r\n                        <button :value=\"activeAnswer.id\" onclick=\"alert(this.value)\">Проголосовать</button>\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n            <p v-show=\"initialVisible\">\r\n                <label>Добавить свой вариант ответа:</label><br />\r\n                <input class=\"text\" type=\"text\" v-model=\"newAnswer\" />\r\n                <button @click=\"addAnswer(newAnswer)\">Добавить</button>\r\n            </p>\r\n            <!--<h2>quastions № {{$route.params.id }}</h2>-->\r\n\r\n        </div>        \r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        \r\n        data() {\r\n            return {\r\n                newAnswer: \"\",\r\n                activeQuestion: \"\",\r\n                activeQuestionId: \"\",\r\n                activeAnswers: \"\",\r\n                initialVisible: false,\r\n            }\r\n        },      \r\n        \r\n            \r\n        methods: {\r\n            \r\n            GetActiveQuestionsAnswer(value) {\r\n                this.initialVisible = true;\r\n                this.activeQuestionId = Number(value);\r\n                fetch(\"https://localhost:44319/questions/\" + value).then(response => response.json())\r\n                    .then(commits => this.activeQuestion = commits);\r\n                fetch(\"https://localhost:44319/answers/\" + value).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits);\r\n            },\r\n            addAnswer(value) {\r\n                fetch(\"https://localhost:44319/answers/\",\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ answerText: value, QuestionId: this.activeQuestionId })\r\n                    });\r\n                    fetch(\"https://localhost:44319/answers/\" + this.activeQuestionId).then(response => response.json())\r\n                    .then(commits => this.activeAnswers = commits);\r\n               \r\n            },\r\n            \r\n        }\r\n    } \r\n</script>\r\n<style>\r\n    #answer {\r\n        width: 30%;\r\n        border: none;\r\n        border-radius: 10px;\r\n        margin: 10px;\r\n        padding: 10px;\r\n        background-color: silver;\r\n    }\r\n\r\n    #question {\r\n        width: 40%;\r\n        height: 30px;\r\n        background-color: darkgrey;\r\n        border: none;        \r\n        border-radius: 10px;\r\n        margin: 20px;\r\n        padding: 20px;\r\n    }\r\n\r\n    .radio-list {\r\n        list-style: none;\r\n    }\r\n</style>\r\n\r\n"],"sourceRoot":"src/components"}]}