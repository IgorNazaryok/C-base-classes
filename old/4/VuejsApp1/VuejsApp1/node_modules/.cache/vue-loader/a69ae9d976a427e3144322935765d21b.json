{"remainingRequest":"D:\\report\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\report\\VuejsApp1\\VuejsApp1\\src\\components\\Products.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\report\\VuejsApp1\\VuejsApp1\\src\\components\\Products.vue","mtime":1587669002896},{"path":"D:\\report\\VuejsApp1\\VuejsApp1\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\report\\VuejsApp1\\VuejsApp1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\report\\VuejsApp1\\VuejsApp1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            likes: 0,\n            messages: \"test\",\n            newQuestionText: '',\n            QuestionId: 'пусто',\n            newAnswers: ''\n        }\n    },\n    methods: {\n        \n         Get(url) {\n            fetch(url).then(response => response.json())\n                .then(commits => this.messages = commits);\n        },\n        //--------------------------------------------\n        CreateQ(url) {\n            fetch(url,\n                {\n                    method: 'POST',\n                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ questionText: this.newQuestionText })\n                })\n                .then(response => response.json())\n                .then(data => this.QuestionId = data.id);\n        },\n        //--------------------------------------------\n        CreateA(url) {\n            fetch(url,\n                {\n                    method: 'POST',\n                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ answerText: this.newAnswers, QuestionId: this.QuestionId })\n                })\n\n            //.then(response => response.ok === true ? console.log(\"записано\") : console.log(\"не записано\"));\n        }\n    }\n\n};\n//var app1 = new Vue({\n//    el: '#app1',\n//    data: {\n//        messages: \"test\",\n//        newQuestionText: '',\n//        QuestionId: 'пусто',\n//        newAnswers: ''\n\n//    },\n//    methods:\n//    {\n//        Get: function (url) {\n//            fetch(url).then(response => response.json())\n//                .then(commits => this.messages = commits);\n//        },\n//        //--------------------------------------------\n//        CreateQ: function (url) {\n//            fetch(url,\n//                {\n//                    method: 'POST',\n//                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n//                    body: JSON.stringify({ questionText: this.newQuestionText })\n//                })\n//                .then(response => response.json())\n//                .then(data => this.QuestionId = data.id);\n//        },\n//        //--------------------------------------------\n//        CreateA: function (url) {\n//            fetch(url,\n//                {\n//                    method: 'POST',\n//                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\n//                    body: JSON.stringify({ answerText: this.newAnswers, QuestionId: this.QuestionId })\n//                })\n\n//            //.then(response => response.ok === true ? console.log(\"записано\") : console.log(\"не записано\"));\n//        }\n//        //--------------------------------------------\n\n//    }\n//});\n",{"version":3,"sources":["Products.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"Products.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <section>\r\n        <div>\r\n            <ul>\r\n                <!--<li v-for=\"message in messages\">\r\n                    <p>{{ message.questionText }} <button v-on:click=\"\">Голосовать</button></p>\r\n\r\n\r\n                </li>-->\r\n            </ul> <br><br>\r\n            <p>\r\n                <input type=\"text\" v-model=\"newQuestionText\" />\r\n                <button v-on:click=\"CreateQ('localhost:44319/questions')\">Создать новый вопрос</button>\r\n            </p>\r\n            <p>\r\n                <input type=\"text\" v-model=\"newAnswers\" />\r\n                <button v-on:click=\"CreateA('localhost:44319/answers')\">Добавить вариант ответа</button>\r\n            </p>\r\n            <p>\r\n                {{ QuestionId }}\r\n\r\n                {{ Get('localhost:44319/questions') }}\r\n            </p>\r\n\r\n        </div>\r\n        </section>\r\n</template>\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                likes: 0,\r\n                messages: \"test\",\r\n                newQuestionText: '',\r\n                QuestionId: 'пусто',\r\n                newAnswers: ''\r\n            }\r\n        },\r\n        methods: {\r\n            \r\n             Get(url) {\r\n                fetch(url).then(response => response.json())\r\n                    .then(commits => this.messages = commits);\r\n            },\r\n            //--------------------------------------------\r\n            CreateQ(url) {\r\n                fetch(url,\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ questionText: this.newQuestionText })\r\n                    })\r\n                    .then(response => response.json())\r\n                    .then(data => this.QuestionId = data.id);\r\n            },\r\n            //--------------------------------------------\r\n            CreateA(url) {\r\n                fetch(url,\r\n                    {\r\n                        method: 'POST',\r\n                        headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify({ answerText: this.newAnswers, QuestionId: this.QuestionId })\r\n                    })\r\n\r\n                //.then(response => response.ok === true ? console.log(\"записано\") : console.log(\"не записано\"));\r\n            }\r\n        }\r\n\r\n    };\r\n    //var app1 = new Vue({\r\n    //    el: '#app1',\r\n    //    data: {\r\n    //        messages: \"test\",\r\n    //        newQuestionText: '',\r\n    //        QuestionId: 'пусто',\r\n    //        newAnswers: ''\r\n\r\n    //    },\r\n    //    methods:\r\n    //    {\r\n    //        Get: function (url) {\r\n    //            fetch(url).then(response => response.json())\r\n    //                .then(commits => this.messages = commits);\r\n    //        },\r\n    //        //--------------------------------------------\r\n    //        CreateQ: function (url) {\r\n    //            fetch(url,\r\n    //                {\r\n    //                    method: 'POST',\r\n    //                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n    //                    body: JSON.stringify({ questionText: this.newQuestionText })\r\n    //                })\r\n    //                .then(response => response.json())\r\n    //                .then(data => this.QuestionId = data.id);\r\n    //        },\r\n    //        //--------------------------------------------\r\n    //        CreateA: function (url) {\r\n    //            fetch(url,\r\n    //                {\r\n    //                    method: 'POST',\r\n    //                    headers: { \"Accept\": \"application/json\", \"Content-Type\": \"application/json\" },\r\n    //                    body: JSON.stringify({ answerText: this.newAnswers, QuestionId: this.QuestionId })\r\n    //                })\r\n\r\n    //            //.then(response => response.ok === true ? console.log(\"записано\") : console.log(\"не записано\"));\r\n    //        }\r\n    //        //--------------------------------------------\r\n\r\n    //    }\r\n    //});\r\n</script>"]}]}